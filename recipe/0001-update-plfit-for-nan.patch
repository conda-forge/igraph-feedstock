From ab123f04e487bc8bc1b93b9258e577e5f05d7ce9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Szabolcs=20Horva=CC=81t?= <szhorvat@gmail.com>
Date: Sun, 17 Nov 2024 17:38:52 +0000
Subject: [PATCH] chore: update plfit, works around non-compile-time-constant
 NAN bug in recent Windows 11 SDKs

---
 vendor/plfit/arithmetic_sse_double.h |  4 ++--
 vendor/plfit/gss.c                   |  1 -
 vendor/plfit/hzeta.c                 | 13 ++++++++++++-
 vendor/plfit/lbfgs.c                 |  9 ---------
 vendor/plfit/plfit.c                 |  1 -
 vendor/plfit/plfit_mt.h              |  7 +------
 vendor/plfit/plfit_version.h         |  4 ++--
 vendor/plfit/rbinom.c                |  1 -
 vendor/plfit/sampling.c              |  1 -
 9 files changed, 17 insertions(+), 24 deletions(-)

diff --git a/vendor/plfit/arithmetic_sse_double.h b/vendor/plfit/arithmetic_sse_double.h
index a94d89d55c..a5575fed14 100644
--- a/vendor/plfit/arithmetic_sse_double.h
+++ b/vendor/plfit/arithmetic_sse_double.h
@@ -43,7 +43,7 @@
 
 inline static void* vecalloc(size_t size)
 {
-#ifdef	_MSC_VER
+#ifdef	_WIN32
     void *memblock = _aligned_malloc(size, 16);
 #elif defined(__APPLE__)
 	/* Memory on Mac OS X is already aligned to 16 bytes */
@@ -59,7 +59,7 @@ inline static void* vecalloc(size_t size)
 
 inline static void vecfree(void *memblock)
 {
-#ifdef	_MSC_VER
+#ifdef	_WIN32
     _aligned_free(memblock);
 #else
     free(memblock);
diff --git a/vendor/plfit/gss.c b/vendor/plfit/gss.c
index 5c5ffbd1a5..2d6eb210eb 100644
--- a/vendor/plfit/gss.c
+++ b/vendor/plfit/gss.c
@@ -22,7 +22,6 @@
 #include <string.h>
 #include "plfit_error.h"
 #include "gss.h"
-#include "platform.h"
 
 /**
  * \def PHI
diff --git a/vendor/plfit/hzeta.c b/vendor/plfit/hzeta.c
index d8f9a6d9a7..ea7b9d3bcc 100644
--- a/vendor/plfit/hzeta.c
+++ b/vendor/plfit/hzeta.c
@@ -50,7 +50,18 @@
 #include <stdio.h>
 #include "hzeta.h"
 #include "plfit_error.h"
-#include "platform.h"   /* because of NAN */
+
+/* Work around bug in some Windows SDK / MSVC versions where NAN is not a
+ * constant expression, triggering an error in the definition of
+ * hsl_sf_hzeta_eulermaclaurin_series_coeffs[] and 
+ * hsl_sf_hzeta_eulermaclaurin_series_majorantratios[] below.
+ * We re-define NAN to the value it had in earlier MSVC versions.
+ * See https://github.com/igraph/igraph/issues/2701
+ */
+#ifdef _MSC_VER
+#undef NAN
+#define NAN (-(float)(((float)(1e+300 * 1e+300)) * 0.0F))
+#endif
 
 /* imported from gsl_machine.h */
 
diff --git a/vendor/plfit/lbfgs.c b/vendor/plfit/lbfgs.c
index c4652da4ee..3f670940d5 100644
--- a/vendor/plfit/lbfgs.c
+++ b/vendor/plfit/lbfgs.c
@@ -65,20 +65,11 @@ licence.
 #include "config.h"
 #endif/*HAVE_CONFIG_H*/
 
-#ifndef _MSC_VER
 #include <stdint.h>
-#endif
-
 #include <stdio.h>
 #include <math.h>
 
 #include "lbfgs.h"
-#include "platform.h"
-
-#ifdef  _MSC_VER
-#define inline  __inline
-typedef unsigned int uint32_t;
-#endif/*_MSC_VER*/
 
 #if     defined(USE_SSE) && defined(__SSE2__) && LBFGS_FLOAT == 64
 /* Use SSE2 optimization for 64bit double precision. */
diff --git a/vendor/plfit/plfit.c b/vendor/plfit/plfit.c
index 6eae747e8d..27e788d360 100644
--- a/vendor/plfit/plfit.c
+++ b/vendor/plfit/plfit.c
@@ -27,7 +27,6 @@
 #include "plfit_error.h"
 #include "gss.h"
 #include "lbfgs.h"
-#include "platform.h"
 #include "plfit.h"
 #include "kolmogorov.h"
 #include "plfit_sampling.h"
diff --git a/vendor/plfit/plfit_mt.h b/vendor/plfit/plfit_mt.h
index c7ed0dcf04..b30cdaf504 100644
--- a/vendor/plfit/plfit_mt.h
+++ b/vendor/plfit/plfit_mt.h
@@ -14,12 +14,7 @@
 #ifndef __PLFIT_MT_H__
 #define __PLFIT_MT_H__
 
-/* VS 2010, i.e. _MSC_VER == 1600, already has stdint.h */
-#if defined(_MSC_VER) && _MSC_VER < 1600
-#  define uint32_t unsigned __int32
-#else
-#  include <stdint.h>
-#endif
+#include <stdint.h>
 
 #undef __BEGIN_DECLS
 #undef __END_DECLS
diff --git a/vendor/plfit/plfit_version.h b/vendor/plfit/plfit_version.h
index 37da90abc2..8d5e6000d2 100644
--- a/vendor/plfit/plfit_version.h
+++ b/vendor/plfit/plfit_version.h
@@ -22,7 +22,7 @@
 
 #define PLFIT_VERSION_MAJOR 0
 #define PLFIT_VERSION_MINOR 9
-#define PLFIT_VERSION_PATCH 4
-#define PLFIT_VERSION_STRING "0.9.4"
+#define PLFIT_VERSION_PATCH 6
+#define PLFIT_VERSION_STRING "0.9.6"
 
 #endif
diff --git a/vendor/plfit/rbinom.c b/vendor/plfit/rbinom.c
index 354398d4a1..6d7dbe9cfd 100644
--- a/vendor/plfit/rbinom.c
+++ b/vendor/plfit/rbinom.c
@@ -44,7 +44,6 @@
 #include <math.h>
 #include <stdlib.h>
 #include "plfit_sampling.h"
-#include "platform.h"
 
 #define repeat for(;;)
 
diff --git a/vendor/plfit/sampling.c b/vendor/plfit/sampling.c
index 8fb26ead82..fa16a0b3e7 100644
--- a/vendor/plfit/sampling.c
+++ b/vendor/plfit/sampling.c
@@ -24,7 +24,6 @@
 
 #include "plfit_error.h"
 #include "plfit_sampling.h"
-#include "platform.h"
 
 inline double plfit_runif(double lo, double hi, plfit_mt_rng_t* rng) {
     if (rng == 0) {
